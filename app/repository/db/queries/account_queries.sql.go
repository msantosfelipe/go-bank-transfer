// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: account_queries.sql

package queries

import (
	"context"

	"github.com/google/uuid"
)

const countAccountByCpf = `-- name: CountAccountByCpf :one
SELECT count(1) 
FROM accounts a 
WHERE a.cpf = $1
`

func (q *Queries) CountAccountByCpf(ctx context.Context, cpf string) (int64, error) {
	row := q.db.QueryRow(ctx, countAccountByCpf, cpf)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts(id, name, cpf)
VALUES ($1, $2, $3)
RETURNING id
`

type CreateAccountParams struct {
	ID   uuid.UUID
	Name string
	Cpf  string
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, createAccount, arg.ID, arg.Name, arg.Cpf)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
